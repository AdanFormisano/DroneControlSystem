#ifndef DRONECONTROLSYSTEM_DRONE_H
#define DRONECONTROLSYSTEM_DRONE_H

#include <string>
#include <sw/redis++/redis++.h>
#include "ChargeBase.h" // Ensure this is included for charging functionality

using namespace sw::redis;

namespace drones {

    class Drone {
    private:
        const int id; // TODO: it should be generated by the system
        int charge = 100; // Default charge level
        std::string status = "Ready"; // TODO: Change to enum
        std::string data;
        std::string key;


    public:
        Redis& redis; // This is the shared redis connection used for data/status updates
        Drone(int droneId, Redis& sharedRedis);

        // For charging interaction
        void requestCharging();
        void onChargingComplete();

        // Getters for demonstration and utility
        [[nodiscard]] int getId() const;
        [[nodiscard]] int getCharge() const;
        [[nodiscard]] std::string getStatus() const;

        // Utilize for charging simulation
        void setCharge(int newCharge);
    };

}

#endif //DRONECONTROLSYSTEM_DRONE_H